ftr_match_spine:
  keys: ["home_team", "away_team", "date", "season", "league"]

feature:
  momentum:
    translation:
      - object: general.functions.feature_engineering.utils.transforming.dict_replace
        input_col: full_time_result
        dictionary:
          win: 3
          draw: 1
          loss: 0
        column_name: points_per_game
    flagging:
      - object: general.functions.feature_engineering.flags.expr_flag
        column_name: playing_at_home
        expr: case when home_away_indication = 'home' then 1 else 0 end
      - object: general.functions.feature_engineering.flags.expr_flag
        column_name: playing_away
        expr: case when home_away_indication = 'away' then 1 else 0 end
      - object: general.functions.feature_engineering.flags.expr_flag
        column_name: winning_the_game
        expr: case when full_time_result = 'win' then 1 else 0 end
      - object: general.functions.feature_engineering.flags.expr_flag
        column_name: drawing_the_game
        expr: case when full_time_result = 'draw' then 1 else 0 end
      - object: general.functions.feature_engineering.flags.expr_flag
        column_name: losing_the_game
        expr: case when full_time_result = 'loss' then 1 else 0 end
    horizontal_averages:
      - object: general.functions.feature_engineering.aggregation.create_horizontal_averages
        aggregation_columns:
          - bet365_odds
          - gamebookers_odds
          - interwetten_odds
          - ladbrokes_odds
          - sportingbet_odds
          - williamhill_odds
          - stanleybet_odds
          - sporting_odds
          - betwin_odds
          - stanjames_odds
          - vc_odds
          - bluesquare_odds
          - pinnacle_odds
        column_name: betting_odds_winning
      - object: general.functions.feature_engineering.aggregation.create_horizontal_averages
        aggregation_columns:
          - bet365_draw_odds
          - gamebookers_draw_odds
          - interwetten_draw_odds
          - ladbrokes_draw_odds
          - sportingbet_draw_odds
          - williamhill_draw_odds
          - stanleybet_draw_odds
          - sporting_draw_odds
          - betwin_draw_odds
          - stanjames_draw_odds
          - vc_draw_odds
          - bluesquare_draw_odds
          - pinnacle_draw_odds
        column_name: betting_odds_drawing
      - object: general.functions.feature_engineering.aggregation.create_horizontal_averages
        aggregation_columns:
          - bet365_opponent_odds
          - gamebookers_opponent_odds
          - interwetten_opponent_odds
          - ladbrokes_opponent_odds
          - sportingbet_opponent_odds
          - williamhill_opponent_odds
          - stanleybet_opponent_odds
          - sporting_opponent_odds
          - betwin_opponent_odds
          - stanjames_opponent_odds
          - vc_opponent_odds
          - bluesquare_opponent_odds
          - pinnacle_opponent_odds
        column_name: betting_odds_losing
      - object: general.functions.feature_engineering.aggregation.create_horizontal_averages
        aggregation_columns:
          - winning_the_game
          - drawing_the_game
          - losing_the_game
        column_name: game_indication
    window_operations:
      - object: general.functions.feature_engineering.aggregation.create_window_aggregates
        partition_by: ["team"]
        order_by: ["datediff"]
        aggregation_columns:
          - betting_odds_winning
          - betting_odds_drawing
          - betting_odds_losing
          - full_time_goals
          - full_time_opponent_goals
          - points_per_game
          - playing_at_home
          - playing_away
          - winning_the_game
          - drawing_the_game
          - losing_the_game
        aggregation_type: pyspark.sql.functions.avg
        rows_between: [[-30, -1], [-5, -1]]
        prefix: ftr_window_team
        suffix: last_games
      - object: general.functions.feature_engineering.aggregation.create_window_aggregates
        partition_by: ["team", "opponent_team"]
        order_by: ["datediff"]
        aggregation_columns:
          - winning_the_game
          - drawing_the_game
          - losing_the_game
          - game_indication
        aggregation_type: pyspark.sql.functions.sum
        rows_between: [[-10, -1], [-3, -1]]
        prefix: ftr_window_match
        suffix: last_interaction
    post_window_operations:
      - object: general.functions.feature_engineering.aggregation.dynamic_post_window_aggregation
        left_column: ftr_window_team_winning_the_game_(?P<window>.*)_last_games
        right_column: ftr_window_team_playing_at_home_(?P<window>.*)_last_games
        math_operation: /
        output_column: ftr_ratio_winning_game_at_home_(?P<window>.*)
      - object: general.functions.feature_engineering.aggregation.dynamic_post_window_aggregation
        left_column: ftr_window_team_drawing_the_game_(?P<window>.*)_last_games
        right_column: ftr_window_team_playing_at_home_(?P<window>.*)_last_games
        math_operation: /
        output_column: ftr_ratio_drawing_game_at_home_(?P<window>.*)
      - object: general.functions.feature_engineering.aggregation.dynamic_post_window_aggregation
        left_column: ftr_window_team_losing_the_game_(?P<window>.*)_last_games
        right_column: ftr_window_team_playing_at_home_(?P<window>.*)_last_games
        math_operation: /
        output_column: ftr_ratio_drawing_game_at_home_(?P<window>.*)
    # - object: general.functions.feature_engineering.aggregation.basic_algebra
    #   left_column: ftr_window_drawing_the_game_(?P<window>.*)_last_interaction
    #   right_column: ftr_window_playing_at_home_(?P<window>.*)_last_games
    #   math_operation: /
    #   output_column: ftr_ratio_drawing_game_at_home_(?P<window>.*)
